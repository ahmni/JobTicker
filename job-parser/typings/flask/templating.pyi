"""
This type stub file was generated by pyright.
"""

from jinja2 import BaseLoader, Environment as BaseEnvironment

"""
This type stub file was generated by pyright.
"""
class Environment(BaseEnvironment):
    """Works like a regular Jinja2 environment but has some additional
    knowledge of how Flask's blueprint works so that it can prepend the
    name of the blueprint to referenced templates if necessary.
    """
    def __init__(self, app, **options) -> None:
        ...
    


class DispatchingJinjaLoader(BaseLoader):
    """A loader that looks for templates in the application and all
    the blueprint folders.
    """
    def __init__(self, app) -> None:
        ...
    
    def get_source(self, environment, template):
        ...
    
    def list_templates(self):
        ...
    


def render_template(template_name_or_list, **context):
    """Renders a template from the template folder with the given
    context.

    :param template_name_or_list: the name of the template to be
                                  rendered, or an iterable with template names
                                  the first one existing will be rendered
    :param context: the variables that should be available in the
                    context of the template.
    """
    ...

def render_template_string(source, **context):
    """Renders a template from the given template source string
    with the given context. Template variables will be autoescaped.

    :param source: the source code of the template to be
                   rendered
    :param context: the variables that should be available in the
                    context of the template.
    """
    ...

